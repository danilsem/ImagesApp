//
//  HomeInteractor.swift
//  UnsplashPhoto
//
//  Created by Admin on 18.11.2020.
//  Copyright (c) 2020 Danil Semenov. All rights reserved.
//
//  This file was generated by the üêç VIPER generator
//

import Foundation
import RxSwift
import RxRelay

final class HomeInteractor {
    let photosService: PhotosAPI
    
    private let bag = DisposeBag()
    private var currentPage = 1
    
    private let photosRelay: BehaviorRelay<[Photo]> = BehaviorRelay(value: [])
    
    init(photosService: PhotosAPI) {
        self.photosService = photosService
        
        process()
    }
    
    func process() {
        loadMorePhotos()
    }
}

// MARK: - Extensions -

extension HomeInteractor: HomeInteractorInterface {
    var photosObservable: Observable<[Photo]> {
        photosRelay.asObservable().skip(1).share(replay: 1, scope: .whileConnected)
    }
    
    var photosCount: Int {
        photosRelay.value.count
    }
    
    func loadMorePhotos() {
        photosService.getPhotos(page: currentPage)
            .map({ [photosRelay] in
                photosRelay.accept(photosRelay.value + $0)
            })
            .do(afterSuccess: { [weak self] _ in
                self?.currentPage += 1
            })
            .subscribe()
            .disposed(by: bag)
    }
}
