//
//  HomeViewController.swift
//  UnsplashPhoto
//
//  Created by Admin on 18.11.2020.
//  Copyright (c) 2020 Danil Semenov. All rights reserved.
//
//  This file was generated by the 🐍 VIPER generator
//

import UIKit
import RxSwift
import RxCocoa

final class HomeViewController: UIViewController {

    // MARK: - Public properties -

    var presenter: HomePresenterInterface!

    // MARK: - Private properties -
    @IBOutlet private weak var photosCollectionView: UICollectionView!
    
    private let disposeBag = DisposeBag()

    // MARK: - Lifecycle -

    override func viewDidLoad() {
        super.viewDidLoad()
        configureViews()
        setupView()
    }

    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        self.navigationController?.navigationBar.isHidden = false
    }
}

// MARK: - Extensions -

extension HomeViewController: HomeViewInterface {
}

private extension HomeViewController {

    func setupView() {
        let output = Home.ViewOutput(
            loadMorePhotos: photosCollectionView.rx.willDisplayCell
                .map({ $0.at.row })
                .asObservable(),
            photoSelected: photosCollectionView.rx.modelSelected(Photo.self)
                .asDriver()
        )

        let input = presenter.configure(with: output)
        
        input.photosDriver
            .drive(photosCollectionView.rx.items(cellIdentifier: PhotoCell.identifier,cellType: PhotoCell.self),curriedArgument: {
                _, photo, cell in
                cell.configure(using: .init(photo: photo))
            })
            .disposed(by: disposeBag)
    }
    
    func configureViews() {
        self.navigationItem.title = "Unsplash"
        
        photosCollectionView.rx.setDelegate(self).disposed(by: disposeBag)
        photosCollectionView.register(PhotoCell.self, forCellWithReuseIdentifier: PhotoCell.identifier)
    }

}

extension HomeViewController: UICollectionViewDelegateFlowLayout {
    func collectionView(_ collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout, sizeForItemAt indexPath: IndexPath) -> CGSize {
        return CGSize(width: CGFloat((collectionView.frame.size.width / 3) - 13), height: CGFloat(100))
    }
}
